import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# Memuat dataset
url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/00228/smsspamcollection.zip'
df = pd.read_csv(url, sep='\t', names=['label', 'message'])

# Mengubah label menjadi nilai biner: 0 untuk ham, 1 untuk spam
df['label'] = df['label'].map({'ham': 0, 'spam': 1})

# Memisahkan fitur (pesan) dan label
X = df['message']
y = df['label']

# Membagi data menjadi data latih dan data uji
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Menggunakan CountVectorizer untuk mengonversi teks menjadi vektor numerik
vectorizer = CountVectorizer()
X_train_vect = vectorizer.fit_transform(X_train)
X_test_vect = vectorizer.transform(X_test)

# Membuat model Naive Bayes dan melatihnya
nb_classifier = MultinomialNB()
nb_classifier.fit(X_train_vect, y_train)

# Melakukan prediksi pada data uji
y_pred = nb_classifier.predict(X_test_vect)

# Evaluasi model
accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)

print(f'Accuracy: {accuracy}')
print(f'Confusion Matrix:\n{conf_matrix}')
print(f'Classification Report:\n{class_report}')
